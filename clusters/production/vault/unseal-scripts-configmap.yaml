apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-unseal-scripts
  namespace: vault
data:
  unseal-init.sh: |
    #!/bin/sh
    set -e

    # Wait for Vault to be ready
    echo "Waiting for Vault API to be available..."
    until curl -s -f http://localhost:8200/v1/sys/health >/dev/null 2>&1; do
      echo "Vault not ready, waiting..."
      sleep 5
    done

    # Check if Vault is already initialized
    echo "Checking Vault initialization status..."
    INIT_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8200/v1/sys/init)
    if [ "$INIT_STATUS" = "400" ]; then
      echo "Vault is already initialized, checking seal status..."
      SEAL_STATUS=$(curl -s http://localhost:8200/v1/sys/seal-status | jq -r '.sealed')
      if [ "$SEAL_STATUS" = "true" ]; then
        echo "Vault is sealed, attempting to unseal..."
        # Read unseal keys from Kubernetes secret
        UNSEAL_KEYS=$(cat /vault/unseal/unseal-keys)
        
        # Unseal with each key (assuming 5 keys, adjust as needed)
        echo "$UNSEAL_KEYS" | while read key; do
          if [ -n "$key" ]; then
            echo "Applying unseal key..."
            curl -s -X POST -d "{\"key\":\"$key\"}" http://localhost:8200/v1/sys/unseal
          fi
        done
        
        echo "Unseal process completed"
      else
        echo "Vault is already unsealed"
      fi
    elif [ "$INIT_STATUS" = "200" ]; then
      echo "Vault is not initialized, this should be done manually"
    else
      echo "Unexpected Vault status: $INIT_STATUS"
    fi

    echo "Init container completed"